version: "3"

services:
  front-end:
    image: challenges-frontend:1.0.0
    ports:
      - '3000:80'
  multiplicator:
    image: multiplicator:1.0.0
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_CONSUL_HOST=consul
    depends_on:
      - mongo-dev
      - rabbitmq-dev
      - consul-importer
    networks:
      - microservices
  gamification:
    image: gamification:1.0.0
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_CONSUL_HOST=consul
    depends_on:
      - mongo-dev
      - rabbitmq-dev
      - consul-importer
    networks:
      - microservices
  logs:
    image: logs:1.0.0
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_CONSUL_HOST=consul
    depends_on:
      - rabbitmq-dev
      - consul-importer
    networks:
      - microservices
  gateway:
    image: gateway:1.0.0
    ports:
      - '8000:8000'
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_CONSUL_HOST=consul
    depends_on:
      - rabbitmq-dev
      - consul-importer
    networks:
      - microservices
  consul-importer:
    image: consul-importer:1.0.0
    depends_on:
      - consul-dev
    networks:
      - microservices
  consul-dev:
    image: consul:1.7.2
    container_name: consul
    ports:
      - '8500:8500'
      # The UDP port 8600 is used by Consul to communicate different nodes between each other.
      - '8600:8600/udp'
    command: [ 'agent', '-dev', '-node=learnmicro', '-client=0.0.0.0', '-log-level=INFO' ]
    networks:
      - microservices
  rabbitmq-dev:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    networks:
      - microservices
  mongo-dev:
    image: mongo:5.0.6
    container_name: mongo
    ports:
      - '27017:27017'
    restart: always
    # Content of the ./mongo folder is mounted as a volume to the /docker-entrypoint-initdb.d/,
    # all files from where are being executed when MongoDB runs in a container.
    # For details see https://stackoverflow.com/a/68641785
    volumes:
      - ./mongo:/docker-entrypoint-initdb.d/
    command: [ '--replSet', 'rs0', '--bind_ip_all' ]
    networks:
      - microservices

networks:
  microservices:
    driver: bridge